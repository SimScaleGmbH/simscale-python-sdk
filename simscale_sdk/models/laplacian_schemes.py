# coding: utf-8

"""
    SimScale API

    The version of the OpenAPI document: 0.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from simscale_sdk.configuration import Configuration


class LaplacianSchemes(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'for_default': 'OneOfLaplacianSchemesForDefault',
        'laplacian_nu_eff_velocity': 'OneOfLaplacianSchemesLaplacianNuEffVelocity',
        'laplacian_1_a_u_pressure': 'OneOfLaplacianSchemesLaplacian1AUPressure',
        'laplacian_nu_velocity': 'OneOfLaplacianSchemesLaplacianNuVelocity',
        'laplacian_dr_eff_r': 'OneOfLaplacianSchemesLaplacianDREffR',
        'laplacian_dnu_tilda_eff_nu_tilda': 'OneOfLaplacianSchemesLaplacianDnuTildaEffNuTilda',
        'laplacian_dk_eff_turbulent_kinetic_energy': 'OneOfLaplacianSchemesLaplacianDkEffTurbulentKineticEnergy',
        'laplacian_alpha_eff_enthalpy': 'OneOfLaplacianSchemesLaplacianAlphaEffEnthalpy',
        'laplacian_alpha_enthalpy': 'OneOfLaplacianSchemesLaplacianAlphaEnthalpy',
        'laplacian_mu_eff_velocity': 'OneOfLaplacianSchemesLaplacianMuEffVelocity',
        'laplacian_alpha_eff_internal_energy': 'OneOfLaplacianSchemesLaplacianAlphaEffInternalEnergy',
        'laplacian_rhor_a_uf_pressure_rgh': 'OneOfLaplacianSchemesLaplacianRhorAUfPressureRgh',
        'laplacian_depsilon_eff_epsilon_dissipation_rate': 'OneOfLaplacianSchemesLaplacianDepsilonEffEpsilonDissipationRate',
        'laplacian_domega_eff_omega_dissipation_rate': 'OneOfLaplacianSchemesLaplacianDomegaEffOmegaDissipationRate',
        'laplacian_r_a_uf_pressure': 'OneOfLaplacianSchemesLaplacianRAUfPressure',
        'laplacian_dt_passive_scalar': 'OneOfLaplacianSchemesLaplacianDTPassiveScalar',
        'laplacian_dp_pressure': 'OneOfLaplacianSchemesLaplacianDpPressure',
        'laplacian_rhor_a_uf_pressure': 'OneOfLaplacianSchemesLaplacianRhorAUfPressure',
        'laplacian_rho_1_a_u_pressure': 'OneOfLaplacianSchemesLaplacianRho1AUPressure',
        'laplacian_mut_velocity': 'OneOfLaplacianSchemesLaplacianMutVelocity',
        'laplacian_alpha_eff_temperature': 'OneOfLaplacianSchemesLaplacianAlphaEffTemperature',
        'laplacian_r_a_uf_pressure_rgh': 'OneOfLaplacianSchemesLaplacianRAUfPressureRgh'
    }

    attribute_map = {
        'for_default': 'forDefault',
        'laplacian_nu_eff_velocity': 'laplacian_NuEff_velocity',
        'laplacian_1_a_u_pressure': 'laplacian_1A_U_pressure',
        'laplacian_nu_velocity': 'laplacian_Nu_velocity',
        'laplacian_dr_eff_r': 'laplacian_DREff_R',
        'laplacian_dnu_tilda_eff_nu_tilda': 'laplacian_DnuTildaEff_nuTilda',
        'laplacian_dk_eff_turbulent_kinetic_energy': 'laplacian_DkEff_turbulentKineticEnergy',
        'laplacian_alpha_eff_enthalpy': 'laplacian_alphaEff_enthalpy',
        'laplacian_alpha_enthalpy': 'laplacian_alpha_enthalpy',
        'laplacian_mu_eff_velocity': 'laplacian_muEff_velocity',
        'laplacian_alpha_eff_internal_energy': 'laplacian_alphaEff_internalEnergy',
        'laplacian_rhor_a_uf_pressure_rgh': 'laplacian_rhorAUf_pressureRgh',
        'laplacian_depsilon_eff_epsilon_dissipation_rate': 'laplacian_DepsilonEff_epsilonDissipationRate',
        'laplacian_domega_eff_omega_dissipation_rate': 'laplacian_DomegaEff_omegaDissipationRate',
        'laplacian_r_a_uf_pressure': 'laplacian_rAUf_pressure',
        'laplacian_dt_passive_scalar': 'laplacian_DT_passiveScalar',
        'laplacian_dp_pressure': 'laplacian_Dp_pressure',
        'laplacian_rhor_a_uf_pressure': 'laplacian_rhorAUf_pressure',
        'laplacian_rho_1_a_u_pressure': 'laplacian_rho_1_A_U_pressure',
        'laplacian_mut_velocity': 'laplacian_mut_velocity',
        'laplacian_alpha_eff_temperature': 'laplacian_alphaEff_temperature',
        'laplacian_r_a_uf_pressure_rgh': 'laplacian_rAUf_pressureRgh'
    }

    def __init__(self, for_default=None, laplacian_nu_eff_velocity=None, laplacian_1_a_u_pressure=None, laplacian_nu_velocity=None, laplacian_dr_eff_r=None, laplacian_dnu_tilda_eff_nu_tilda=None, laplacian_dk_eff_turbulent_kinetic_energy=None, laplacian_alpha_eff_enthalpy=None, laplacian_alpha_enthalpy=None, laplacian_mu_eff_velocity=None, laplacian_alpha_eff_internal_energy=None, laplacian_rhor_a_uf_pressure_rgh=None, laplacian_depsilon_eff_epsilon_dissipation_rate=None, laplacian_domega_eff_omega_dissipation_rate=None, laplacian_r_a_uf_pressure=None, laplacian_dt_passive_scalar=None, laplacian_dp_pressure=None, laplacian_rhor_a_uf_pressure=None, laplacian_rho_1_a_u_pressure=None, laplacian_mut_velocity=None, laplacian_alpha_eff_temperature=None, laplacian_r_a_uf_pressure_rgh=None, local_vars_configuration=None):  # noqa: E501
        """LaplacianSchemes - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._for_default = None
        self._laplacian_nu_eff_velocity = None
        self._laplacian_1_a_u_pressure = None
        self._laplacian_nu_velocity = None
        self._laplacian_dr_eff_r = None
        self._laplacian_dnu_tilda_eff_nu_tilda = None
        self._laplacian_dk_eff_turbulent_kinetic_energy = None
        self._laplacian_alpha_eff_enthalpy = None
        self._laplacian_alpha_enthalpy = None
        self._laplacian_mu_eff_velocity = None
        self._laplacian_alpha_eff_internal_energy = None
        self._laplacian_rhor_a_uf_pressure_rgh = None
        self._laplacian_depsilon_eff_epsilon_dissipation_rate = None
        self._laplacian_domega_eff_omega_dissipation_rate = None
        self._laplacian_r_a_uf_pressure = None
        self._laplacian_dt_passive_scalar = None
        self._laplacian_dp_pressure = None
        self._laplacian_rhor_a_uf_pressure = None
        self._laplacian_rho_1_a_u_pressure = None
        self._laplacian_mut_velocity = None
        self._laplacian_alpha_eff_temperature = None
        self._laplacian_r_a_uf_pressure_rgh = None
        self.discriminator = None

        if for_default is not None:
            self.for_default = for_default
        if laplacian_nu_eff_velocity is not None:
            self.laplacian_nu_eff_velocity = laplacian_nu_eff_velocity
        if laplacian_1_a_u_pressure is not None:
            self.laplacian_1_a_u_pressure = laplacian_1_a_u_pressure
        if laplacian_nu_velocity is not None:
            self.laplacian_nu_velocity = laplacian_nu_velocity
        if laplacian_dr_eff_r is not None:
            self.laplacian_dr_eff_r = laplacian_dr_eff_r
        if laplacian_dnu_tilda_eff_nu_tilda is not None:
            self.laplacian_dnu_tilda_eff_nu_tilda = laplacian_dnu_tilda_eff_nu_tilda
        if laplacian_dk_eff_turbulent_kinetic_energy is not None:
            self.laplacian_dk_eff_turbulent_kinetic_energy = laplacian_dk_eff_turbulent_kinetic_energy
        if laplacian_alpha_eff_enthalpy is not None:
            self.laplacian_alpha_eff_enthalpy = laplacian_alpha_eff_enthalpy
        if laplacian_alpha_enthalpy is not None:
            self.laplacian_alpha_enthalpy = laplacian_alpha_enthalpy
        if laplacian_mu_eff_velocity is not None:
            self.laplacian_mu_eff_velocity = laplacian_mu_eff_velocity
        if laplacian_alpha_eff_internal_energy is not None:
            self.laplacian_alpha_eff_internal_energy = laplacian_alpha_eff_internal_energy
        if laplacian_rhor_a_uf_pressure_rgh is not None:
            self.laplacian_rhor_a_uf_pressure_rgh = laplacian_rhor_a_uf_pressure_rgh
        if laplacian_depsilon_eff_epsilon_dissipation_rate is not None:
            self.laplacian_depsilon_eff_epsilon_dissipation_rate = laplacian_depsilon_eff_epsilon_dissipation_rate
        if laplacian_domega_eff_omega_dissipation_rate is not None:
            self.laplacian_domega_eff_omega_dissipation_rate = laplacian_domega_eff_omega_dissipation_rate
        if laplacian_r_a_uf_pressure is not None:
            self.laplacian_r_a_uf_pressure = laplacian_r_a_uf_pressure
        if laplacian_dt_passive_scalar is not None:
            self.laplacian_dt_passive_scalar = laplacian_dt_passive_scalar
        if laplacian_dp_pressure is not None:
            self.laplacian_dp_pressure = laplacian_dp_pressure
        if laplacian_rhor_a_uf_pressure is not None:
            self.laplacian_rhor_a_uf_pressure = laplacian_rhor_a_uf_pressure
        if laplacian_rho_1_a_u_pressure is not None:
            self.laplacian_rho_1_a_u_pressure = laplacian_rho_1_a_u_pressure
        if laplacian_mut_velocity is not None:
            self.laplacian_mut_velocity = laplacian_mut_velocity
        if laplacian_alpha_eff_temperature is not None:
            self.laplacian_alpha_eff_temperature = laplacian_alpha_eff_temperature
        if laplacian_r_a_uf_pressure_rgh is not None:
            self.laplacian_r_a_uf_pressure_rgh = laplacian_r_a_uf_pressure_rgh

    @property
    def for_default(self):
        """Gets the for_default of this LaplacianSchemes.  # noqa: E501


        :return: The for_default of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesForDefault
        """
        return self._for_default

    @for_default.setter
    def for_default(self, for_default):
        """Sets the for_default of this LaplacianSchemes.


        :param for_default: The for_default of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesForDefault
        """

        self._for_default = for_default

    @property
    def laplacian_nu_eff_velocity(self):
        """Gets the laplacian_nu_eff_velocity of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_nu_eff_velocity of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianNuEffVelocity
        """
        return self._laplacian_nu_eff_velocity

    @laplacian_nu_eff_velocity.setter
    def laplacian_nu_eff_velocity(self, laplacian_nu_eff_velocity):
        """Sets the laplacian_nu_eff_velocity of this LaplacianSchemes.


        :param laplacian_nu_eff_velocity: The laplacian_nu_eff_velocity of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianNuEffVelocity
        """

        self._laplacian_nu_eff_velocity = laplacian_nu_eff_velocity

    @property
    def laplacian_1_a_u_pressure(self):
        """Gets the laplacian_1_a_u_pressure of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_1_a_u_pressure of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacian1AUPressure
        """
        return self._laplacian_1_a_u_pressure

    @laplacian_1_a_u_pressure.setter
    def laplacian_1_a_u_pressure(self, laplacian_1_a_u_pressure):
        """Sets the laplacian_1_a_u_pressure of this LaplacianSchemes.


        :param laplacian_1_a_u_pressure: The laplacian_1_a_u_pressure of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacian1AUPressure
        """

        self._laplacian_1_a_u_pressure = laplacian_1_a_u_pressure

    @property
    def laplacian_nu_velocity(self):
        """Gets the laplacian_nu_velocity of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_nu_velocity of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianNuVelocity
        """
        return self._laplacian_nu_velocity

    @laplacian_nu_velocity.setter
    def laplacian_nu_velocity(self, laplacian_nu_velocity):
        """Sets the laplacian_nu_velocity of this LaplacianSchemes.


        :param laplacian_nu_velocity: The laplacian_nu_velocity of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianNuVelocity
        """

        self._laplacian_nu_velocity = laplacian_nu_velocity

    @property
    def laplacian_dr_eff_r(self):
        """Gets the laplacian_dr_eff_r of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_dr_eff_r of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianDREffR
        """
        return self._laplacian_dr_eff_r

    @laplacian_dr_eff_r.setter
    def laplacian_dr_eff_r(self, laplacian_dr_eff_r):
        """Sets the laplacian_dr_eff_r of this LaplacianSchemes.


        :param laplacian_dr_eff_r: The laplacian_dr_eff_r of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianDREffR
        """

        self._laplacian_dr_eff_r = laplacian_dr_eff_r

    @property
    def laplacian_dnu_tilda_eff_nu_tilda(self):
        """Gets the laplacian_dnu_tilda_eff_nu_tilda of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_dnu_tilda_eff_nu_tilda of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianDnuTildaEffNuTilda
        """
        return self._laplacian_dnu_tilda_eff_nu_tilda

    @laplacian_dnu_tilda_eff_nu_tilda.setter
    def laplacian_dnu_tilda_eff_nu_tilda(self, laplacian_dnu_tilda_eff_nu_tilda):
        """Sets the laplacian_dnu_tilda_eff_nu_tilda of this LaplacianSchemes.


        :param laplacian_dnu_tilda_eff_nu_tilda: The laplacian_dnu_tilda_eff_nu_tilda of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianDnuTildaEffNuTilda
        """

        self._laplacian_dnu_tilda_eff_nu_tilda = laplacian_dnu_tilda_eff_nu_tilda

    @property
    def laplacian_dk_eff_turbulent_kinetic_energy(self):
        """Gets the laplacian_dk_eff_turbulent_kinetic_energy of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_dk_eff_turbulent_kinetic_energy of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianDkEffTurbulentKineticEnergy
        """
        return self._laplacian_dk_eff_turbulent_kinetic_energy

    @laplacian_dk_eff_turbulent_kinetic_energy.setter
    def laplacian_dk_eff_turbulent_kinetic_energy(self, laplacian_dk_eff_turbulent_kinetic_energy):
        """Sets the laplacian_dk_eff_turbulent_kinetic_energy of this LaplacianSchemes.


        :param laplacian_dk_eff_turbulent_kinetic_energy: The laplacian_dk_eff_turbulent_kinetic_energy of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianDkEffTurbulentKineticEnergy
        """

        self._laplacian_dk_eff_turbulent_kinetic_energy = laplacian_dk_eff_turbulent_kinetic_energy

    @property
    def laplacian_alpha_eff_enthalpy(self):
        """Gets the laplacian_alpha_eff_enthalpy of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_alpha_eff_enthalpy of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianAlphaEffEnthalpy
        """
        return self._laplacian_alpha_eff_enthalpy

    @laplacian_alpha_eff_enthalpy.setter
    def laplacian_alpha_eff_enthalpy(self, laplacian_alpha_eff_enthalpy):
        """Sets the laplacian_alpha_eff_enthalpy of this LaplacianSchemes.


        :param laplacian_alpha_eff_enthalpy: The laplacian_alpha_eff_enthalpy of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianAlphaEffEnthalpy
        """

        self._laplacian_alpha_eff_enthalpy = laplacian_alpha_eff_enthalpy

    @property
    def laplacian_alpha_enthalpy(self):
        """Gets the laplacian_alpha_enthalpy of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_alpha_enthalpy of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianAlphaEnthalpy
        """
        return self._laplacian_alpha_enthalpy

    @laplacian_alpha_enthalpy.setter
    def laplacian_alpha_enthalpy(self, laplacian_alpha_enthalpy):
        """Sets the laplacian_alpha_enthalpy of this LaplacianSchemes.


        :param laplacian_alpha_enthalpy: The laplacian_alpha_enthalpy of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianAlphaEnthalpy
        """

        self._laplacian_alpha_enthalpy = laplacian_alpha_enthalpy

    @property
    def laplacian_mu_eff_velocity(self):
        """Gets the laplacian_mu_eff_velocity of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_mu_eff_velocity of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianMuEffVelocity
        """
        return self._laplacian_mu_eff_velocity

    @laplacian_mu_eff_velocity.setter
    def laplacian_mu_eff_velocity(self, laplacian_mu_eff_velocity):
        """Sets the laplacian_mu_eff_velocity of this LaplacianSchemes.


        :param laplacian_mu_eff_velocity: The laplacian_mu_eff_velocity of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianMuEffVelocity
        """

        self._laplacian_mu_eff_velocity = laplacian_mu_eff_velocity

    @property
    def laplacian_alpha_eff_internal_energy(self):
        """Gets the laplacian_alpha_eff_internal_energy of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_alpha_eff_internal_energy of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianAlphaEffInternalEnergy
        """
        return self._laplacian_alpha_eff_internal_energy

    @laplacian_alpha_eff_internal_energy.setter
    def laplacian_alpha_eff_internal_energy(self, laplacian_alpha_eff_internal_energy):
        """Sets the laplacian_alpha_eff_internal_energy of this LaplacianSchemes.


        :param laplacian_alpha_eff_internal_energy: The laplacian_alpha_eff_internal_energy of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianAlphaEffInternalEnergy
        """

        self._laplacian_alpha_eff_internal_energy = laplacian_alpha_eff_internal_energy

    @property
    def laplacian_rhor_a_uf_pressure_rgh(self):
        """Gets the laplacian_rhor_a_uf_pressure_rgh of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_rhor_a_uf_pressure_rgh of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianRhorAUfPressureRgh
        """
        return self._laplacian_rhor_a_uf_pressure_rgh

    @laplacian_rhor_a_uf_pressure_rgh.setter
    def laplacian_rhor_a_uf_pressure_rgh(self, laplacian_rhor_a_uf_pressure_rgh):
        """Sets the laplacian_rhor_a_uf_pressure_rgh of this LaplacianSchemes.


        :param laplacian_rhor_a_uf_pressure_rgh: The laplacian_rhor_a_uf_pressure_rgh of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianRhorAUfPressureRgh
        """

        self._laplacian_rhor_a_uf_pressure_rgh = laplacian_rhor_a_uf_pressure_rgh

    @property
    def laplacian_depsilon_eff_epsilon_dissipation_rate(self):
        """Gets the laplacian_depsilon_eff_epsilon_dissipation_rate of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_depsilon_eff_epsilon_dissipation_rate of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianDepsilonEffEpsilonDissipationRate
        """
        return self._laplacian_depsilon_eff_epsilon_dissipation_rate

    @laplacian_depsilon_eff_epsilon_dissipation_rate.setter
    def laplacian_depsilon_eff_epsilon_dissipation_rate(self, laplacian_depsilon_eff_epsilon_dissipation_rate):
        """Sets the laplacian_depsilon_eff_epsilon_dissipation_rate of this LaplacianSchemes.


        :param laplacian_depsilon_eff_epsilon_dissipation_rate: The laplacian_depsilon_eff_epsilon_dissipation_rate of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianDepsilonEffEpsilonDissipationRate
        """

        self._laplacian_depsilon_eff_epsilon_dissipation_rate = laplacian_depsilon_eff_epsilon_dissipation_rate

    @property
    def laplacian_domega_eff_omega_dissipation_rate(self):
        """Gets the laplacian_domega_eff_omega_dissipation_rate of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_domega_eff_omega_dissipation_rate of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianDomegaEffOmegaDissipationRate
        """
        return self._laplacian_domega_eff_omega_dissipation_rate

    @laplacian_domega_eff_omega_dissipation_rate.setter
    def laplacian_domega_eff_omega_dissipation_rate(self, laplacian_domega_eff_omega_dissipation_rate):
        """Sets the laplacian_domega_eff_omega_dissipation_rate of this LaplacianSchemes.


        :param laplacian_domega_eff_omega_dissipation_rate: The laplacian_domega_eff_omega_dissipation_rate of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianDomegaEffOmegaDissipationRate
        """

        self._laplacian_domega_eff_omega_dissipation_rate = laplacian_domega_eff_omega_dissipation_rate

    @property
    def laplacian_r_a_uf_pressure(self):
        """Gets the laplacian_r_a_uf_pressure of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_r_a_uf_pressure of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianRAUfPressure
        """
        return self._laplacian_r_a_uf_pressure

    @laplacian_r_a_uf_pressure.setter
    def laplacian_r_a_uf_pressure(self, laplacian_r_a_uf_pressure):
        """Sets the laplacian_r_a_uf_pressure of this LaplacianSchemes.


        :param laplacian_r_a_uf_pressure: The laplacian_r_a_uf_pressure of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianRAUfPressure
        """

        self._laplacian_r_a_uf_pressure = laplacian_r_a_uf_pressure

    @property
    def laplacian_dt_passive_scalar(self):
        """Gets the laplacian_dt_passive_scalar of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_dt_passive_scalar of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianDTPassiveScalar
        """
        return self._laplacian_dt_passive_scalar

    @laplacian_dt_passive_scalar.setter
    def laplacian_dt_passive_scalar(self, laplacian_dt_passive_scalar):
        """Sets the laplacian_dt_passive_scalar of this LaplacianSchemes.


        :param laplacian_dt_passive_scalar: The laplacian_dt_passive_scalar of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianDTPassiveScalar
        """

        self._laplacian_dt_passive_scalar = laplacian_dt_passive_scalar

    @property
    def laplacian_dp_pressure(self):
        """Gets the laplacian_dp_pressure of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_dp_pressure of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianDpPressure
        """
        return self._laplacian_dp_pressure

    @laplacian_dp_pressure.setter
    def laplacian_dp_pressure(self, laplacian_dp_pressure):
        """Sets the laplacian_dp_pressure of this LaplacianSchemes.


        :param laplacian_dp_pressure: The laplacian_dp_pressure of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianDpPressure
        """

        self._laplacian_dp_pressure = laplacian_dp_pressure

    @property
    def laplacian_rhor_a_uf_pressure(self):
        """Gets the laplacian_rhor_a_uf_pressure of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_rhor_a_uf_pressure of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianRhorAUfPressure
        """
        return self._laplacian_rhor_a_uf_pressure

    @laplacian_rhor_a_uf_pressure.setter
    def laplacian_rhor_a_uf_pressure(self, laplacian_rhor_a_uf_pressure):
        """Sets the laplacian_rhor_a_uf_pressure of this LaplacianSchemes.


        :param laplacian_rhor_a_uf_pressure: The laplacian_rhor_a_uf_pressure of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianRhorAUfPressure
        """

        self._laplacian_rhor_a_uf_pressure = laplacian_rhor_a_uf_pressure

    @property
    def laplacian_rho_1_a_u_pressure(self):
        """Gets the laplacian_rho_1_a_u_pressure of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_rho_1_a_u_pressure of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianRho1AUPressure
        """
        return self._laplacian_rho_1_a_u_pressure

    @laplacian_rho_1_a_u_pressure.setter
    def laplacian_rho_1_a_u_pressure(self, laplacian_rho_1_a_u_pressure):
        """Sets the laplacian_rho_1_a_u_pressure of this LaplacianSchemes.


        :param laplacian_rho_1_a_u_pressure: The laplacian_rho_1_a_u_pressure of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianRho1AUPressure
        """

        self._laplacian_rho_1_a_u_pressure = laplacian_rho_1_a_u_pressure

    @property
    def laplacian_mut_velocity(self):
        """Gets the laplacian_mut_velocity of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_mut_velocity of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianMutVelocity
        """
        return self._laplacian_mut_velocity

    @laplacian_mut_velocity.setter
    def laplacian_mut_velocity(self, laplacian_mut_velocity):
        """Sets the laplacian_mut_velocity of this LaplacianSchemes.


        :param laplacian_mut_velocity: The laplacian_mut_velocity of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianMutVelocity
        """

        self._laplacian_mut_velocity = laplacian_mut_velocity

    @property
    def laplacian_alpha_eff_temperature(self):
        """Gets the laplacian_alpha_eff_temperature of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_alpha_eff_temperature of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianAlphaEffTemperature
        """
        return self._laplacian_alpha_eff_temperature

    @laplacian_alpha_eff_temperature.setter
    def laplacian_alpha_eff_temperature(self, laplacian_alpha_eff_temperature):
        """Sets the laplacian_alpha_eff_temperature of this LaplacianSchemes.


        :param laplacian_alpha_eff_temperature: The laplacian_alpha_eff_temperature of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianAlphaEffTemperature
        """

        self._laplacian_alpha_eff_temperature = laplacian_alpha_eff_temperature

    @property
    def laplacian_r_a_uf_pressure_rgh(self):
        """Gets the laplacian_r_a_uf_pressure_rgh of this LaplacianSchemes.  # noqa: E501


        :return: The laplacian_r_a_uf_pressure_rgh of this LaplacianSchemes.  # noqa: E501
        :rtype: OneOfLaplacianSchemesLaplacianRAUfPressureRgh
        """
        return self._laplacian_r_a_uf_pressure_rgh

    @laplacian_r_a_uf_pressure_rgh.setter
    def laplacian_r_a_uf_pressure_rgh(self, laplacian_r_a_uf_pressure_rgh):
        """Sets the laplacian_r_a_uf_pressure_rgh of this LaplacianSchemes.


        :param laplacian_r_a_uf_pressure_rgh: The laplacian_r_a_uf_pressure_rgh of this LaplacianSchemes.  # noqa: E501
        :type: OneOfLaplacianSchemesLaplacianRAUfPressureRgh
        """

        self._laplacian_r_a_uf_pressure_rgh = laplacian_r_a_uf_pressure_rgh

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LaplacianSchemes):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, LaplacianSchemes):
            return True

        return self.to_dict() != other.to_dict()
